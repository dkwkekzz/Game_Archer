unsigned char sieve[(MAX_N + 7) / 8];

int n;

bool isPrime(int n){
	return sieve[n >> 3] & (1 << (n & 7));
}

void setComposite(int n){
	sieve[n >> 3] &= ~(1 << (n & 7));
}

void eratosthenes(){
	memset(sieve, (1 << 8) - 1, sizeof(sieve));

	setComposite(0); setComposite(1);
	int sqrtn = sqrt(n);
	for (int i = 2; i <= sqrtn; i++){
		if (isPrime(i)){
			for (int j = i * i; j <= n; j += i) 
				setComposite(j);
		}
	}
}
