template<typename T>
struct FenwickTree{
	vector<T> tree;
	FenwickTree(int n) : tree(n + 1){}
	//A라는 벡터로 트리를 만든다.
	FenwickTree(const vector<T>& A){
		for (int i = 0; i < A.size(); i++) add(i, A[i]);
	}
	T sum(int pos){
		++pos;
		T ret = 0;
		while (pos > 0){
			ret += tree[pos];
			//pos:16 8 4 2...
			pos &= (pos - 1);
		}
		return ret;
	}
	void add(int pos, T val){
		++pos;
		while (pos < tree.size()){
			tree[pos] += val;
			//pos:1 2 4 8...
			pos += (pos & -pos);
		}
	}
	//start~end사이의 구간합을 얻는다.
	T getRangeSum(int start, int end){
		return sum(end) - sum(start - 1);
	}
};